package it.univaq.disim.se.masaccio.service;

import java.util.Properties;

import org.springframework.stereotype.Service;

import it.univaq.disim.se.masaccio.data.MessageList;
import it.univaq.disim.se.masaccio.utility.PropertyFileReader;
import kafka.javaapi.producer.Producer;
import kafka.producer.KeyedMessage;
import kafka.producer.ProducerConfig;

@Service
public class MessageDispatcher {
	static Producer<String, MessageList> producer = null;
	
	public void generateMessage(MessageList message, String topic) throws Exception {		
		Properties prop = PropertyFileReader.readPropertyFile();		
		String zookeeper = prop.getProperty("com.iot.app.kafka.zookeeper");
		String brokerList = prop.getProperty("com.iot.app.kafka.brokerlist");

		// set producer properties
		Properties properties = new Properties();
		properties.put("zookeeper.connect", zookeeper);
		properties.put("metadata.broker.list", brokerList);
		properties.put("request.required.acks", "1");
		properties.put("serializer.class", "it.univaq.disim.se.masaccio.utility.MessageDataEncoder");
		properties.put("key.serializer.class", "kafka.serializer.StringEncoder");
		//generate event
		producer = new Producer<String, MessageList>(new ProducerConfig(properties));
		KeyedMessage<String, MessageList> data = new KeyedMessage<String, MessageList>(topic, message);
		
		producer.send(data);
	}
}
