package it.univaq.disim.se.masaccio.processor;

import static com.datastax.spark.connector.japi.CassandraStreamingJavaUtil.javaFunctions;

import java.util.HashMap;
import java.util.Map;

import org.apache.spark.streaming.api.java.JavaDStream;

import com.datastax.spark.connector.japi.CassandraJavaUtil;

import it.univaq.disim.se.masaccio.entity.IoTRoomData;
import it.univaq.disim.se.masaccio.entity.MessageList;

public class MessageDataProcessor {
	/**
	 * Method to send messages to the database
	 * 
	 * @param nonfilteredMessageDataStream message data stream
	 */
	public void processMessageData(JavaDStream<MessageList> nonfilteredMessageDataStream) {
		// Map Cassandra table column
		Map<String, String> columnNameMappings = new HashMap<String, String>();
		columnNameMappings.put("id", "id");
		columnNameMappings.put("timeStamp", "timestamp");
		columnNameMappings.put("idSender", "sender");
		columnNameMappings.put("text", "text");

		// call CassandraStreamingJavaUtil function to save in DB
		javaFunctions(nonfilteredIotDataStream).writerBuilder("primaverakeyspace", "numberofpeople",
				CassandraJavaUtil.mapToRow(IoTRoomData.class, columnNameMappings)).saveToCassandra();

		// call CassandraStreamingJavaUtil function to save in DB
		//javaFunctions(nonfilteredIotDataStream).writerBuilder("primaverakeyspace", "numberofpeople",
				//CassandraJavaUtil.mapToRow(IoTRoomData.class, columnNameMappings)).;

	}
}
